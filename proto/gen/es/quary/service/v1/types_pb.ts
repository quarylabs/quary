// @generated by protoc-gen-es v2.6.2 with parameter "target=ts"
// @generated from file quary/service/v1/types.proto (package quary.service.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import { file_google_protobuf_struct } from "@bufbuild/protobuf/wkt";
import type { JsonObject, Message } from "@bufbuild/protobuf";

/**
 * Describes the file quary/service/v1/types.proto.
 */
export const file_quary_service_v1_types: GenFile = /*@__PURE__*/
  fileDesc("ChxxdWFyeS9zZXJ2aWNlL3YxL3R5cGVzLnByb3RvEhBxdWFyeS5zZXJ2aWNlLnYxIukECgRUZXN0EiwKA3NxbBgBIAEoCzIdLnF1YXJ5LnNlcnZpY2UudjEuVGVzdFNRTEZpbGVIABIuCgZ1bmlxdWUYAiABKAsyHC5xdWFyeS5zZXJ2aWNlLnYxLlRlc3RVbmlxdWVIABIxCghub3RfbnVsbBgDIAEoCzIdLnF1YXJ5LnNlcnZpY2UudjEuVGVzdE5vdE51bGxIABI6CgxyZWxhdGlvbnNoaXAYBCABKAsyIi5xdWFyeS5zZXJ2aWNlLnYxLlRlc3RSZWxhdGlvbnNoaXBIABI/Cg9hY2NlcHRlZF92YWx1ZXMYBSABKAsyJC5xdWFyeS5zZXJ2aWNlLnYxLlRlc3RBY2NlcHRlZFZhbHVlc0gAEkkKFWdyZWF0ZXJfdGhhbl9vcl9lcXVhbBgGIAEoCzIoLnF1YXJ5LnNlcnZpY2UudjEuVGVzdEdyZWF0ZXJUaGFuT3JFcXVhbEgAEkMKEmxlc3NfdGhhbl9vcl9lcXVhbBgHIAEoCzIlLnF1YXJ5LnNlcnZpY2UudjEuVGVzdExlc3NUaGFuT3JFcXVhbEgAEjkKDGdyZWF0ZXJfdGhhbhgIIAEoCzIhLnF1YXJ5LnNlcnZpY2UudjEuVGVzdEdyZWF0ZXJUaGFuSAASMwoJbGVzc190aGFuGAkgASgLMh4ucXVhcnkuc2VydmljZS52MS5UZXN0TGVzc1RoYW5IABJGChNtdWx0aV9jb2x1bW5fdW5pcXVlGAogASgLMicucXVhcnkuc2VydmljZS52MS5UZXN0TXVsdGlDb2x1bW5VbmlxdWVIAEILCgl0ZXN0X3R5cGUiNAoLVGVzdFNRTEZpbGUSEQoJZmlsZV9wYXRoGAEgASgJEhIKCnJlZmVyZW5jZXMYAiADKAkiTAoKVGVzdFVuaXF1ZRIRCglmaWxlX3BhdGgYASABKAkSDQoFbW9kZWwYAiABKAkSDAoEcGF0aBgDIAEoCRIOCgZjb2x1bW4YBCABKAkiTQoLVGVzdE5vdE51bGwSEQoJZmlsZV9wYXRoGAEgASgJEg0KBW1vZGVsGAIgASgJEgwKBHBhdGgYAyABKAkSDgoGY29sdW1uGAQgASgJImcKFlRlc3RHcmVhdGVyVGhhbk9yRXF1YWwSEQoJZmlsZV9wYXRoGAEgASgJEg0KBW1vZGVsGAIgASgJEgwKBHBhdGgYAyABKAkSDgoGY29sdW1uGAQgASgJEg0KBXZhbHVlGAUgASgJImQKE1Rlc3RMZXNzVGhhbk9yRXF1YWwSEQoJZmlsZV9wYXRoGAEgASgJEg0KBW1vZGVsGAIgASgJEgwKBHBhdGgYAyABKAkSDgoGY29sdW1uGAQgASgJEg0KBXZhbHVlGAUgASgJImAKD1Rlc3RHcmVhdGVyVGhhbhIRCglmaWxlX3BhdGgYASABKAkSDQoFbW9kZWwYAiABKAkSDAoEcGF0aBgDIAEoCRIOCgZjb2x1bW4YBCABKAkSDQoFdmFsdWUYBSABKAkiXQoMVGVzdExlc3NUaGFuEhEKCWZpbGVfcGF0aBgBIAEoCRINCgVtb2RlbBgCIAEoCRIMCgRwYXRoGAMgASgJEg4KBmNvbHVtbhgEIAEoCRINCgV2YWx1ZRgFIAEoCSKpAQoQVGVzdFJlbGF0aW9uc2hpcBIRCglmaWxlX3BhdGgYASABKAkSFAoMc291cmNlX21vZGVsGAIgASgJEhMKC3NvdXJjZV9wYXRoGAMgASgJEhUKDXNvdXJjZV9jb2x1bW4YBCABKAkSFAoMdGFyZ2V0X21vZGVsGAUgASgJEhMKC3RhcmdldF9wYXRoGAcgASgJEhUKDXRhcmdldF9jb2x1bW4YCCABKAkibQoSVGVzdEFjY2VwdGVkVmFsdWVzEhEKCWZpbGVfcGF0aBgBIAEoCRINCgVtb2RlbBgCIAEoCRIMCgRwYXRoGAMgASgJEg4KBmNvbHVtbhgEIAEoCRIXCg9hY2NlcHRlZF92YWx1ZXMYBSADKAkiWAoVVGVzdE11bHRpQ29sdW1uVW5pcXVlEhEKCWZpbGVfcGF0aBgBIAEoCRINCgVtb2RlbBgCIAEoCRIMCgRwYXRoGAMgASgJEg8KB2NvbHVtbnMYBCADKAkiQQoEU2VlZBIMCgRuYW1lGAEgASgJEhEKCWZpbGVfcGF0aBgCIAEoCRIYChBmaWxlX3NoYTI1Nl9oYXNoGAMgASgJIocDCgVNb2RlbBIMCgRuYW1lGAEgASgJEhgKC2Rlc2NyaXB0aW9uGAIgASgJSACIAQESDAoEdGFncxgEIAMoCRIRCglmaWxlX3BhdGgYAyABKAkSGAoQZmlsZV9zaGEyNTZfaGFzaBgHIAEoCRIcCg9tYXRlcmlhbGl6YXRpb24YCCABKAlIAYgBARIzCgdjb2x1bW5zGAUgAygLMiIucXVhcnkuc2VydmljZS52MS5Nb2RlbC5Nb2RlbENvbHVtEhIKCnJlZmVyZW5jZXMYBiADKAkSNQoPZGF0YWJhc2VfY29uZmlnGAkgASgLMhcuZ29vZ2xlLnByb3RvYnVmLlN0cnVjdEgCiAEBGkUKCk1vZGVsQ29sdW0SDQoFdGl0bGUYASABKAkSGAoLZGVzY3JpcHRpb24YAiABKAlIAIgBAUIOCgxfZGVzY3JpcHRpb25CDgoMX2Rlc2NyaXB0aW9uQhIKEF9tYXRlcmlhbGl6YXRpb25CEgoQX2RhdGFiYXNlX2NvbmZpZyKHAwoIU25hcHNob3QSDAoEbmFtZRgBIAEoCRIYCgtkZXNjcmlwdGlvbhgCIAEoCUgAiAEBEgwKBHRhZ3MYCCADKAkSEQoJZmlsZV9wYXRoGAMgASgJEhgKEGZpbGVfc2hhMjU2X2hhc2gYBCABKAkSEgoKdW5pcXVlX2tleRgFIAEoCRI9CghzdHJhdGVneRgGIAEoCzIrLnF1YXJ5LnNlcnZpY2UudjEuU25hcHNob3QuU25hcHNob3RTdHJhdGVneRISCgpyZWZlcmVuY2VzGAcgAygJGqABChBTbmFwc2hvdFN0cmF0ZWd5ElIKCXRpbWVzdGFtcBgBIAEoCzI9LnF1YXJ5LnNlcnZpY2UudjEuU25hcHNob3QuU25hcHNob3RTdHJhdGVneS5UaW1lc3RhbXBTdHJhdGVneUgAGicKEVRpbWVzdGFtcFN0cmF0ZWd5EhIKCnVwZGF0ZWRfYXQYASABKAlCDwoNc3RyYXRlZ3lfdHlwZUIOCgxfZGVzY3JpcHRpb24iPQoORGF0YWJhc2VTb3VyY2USDAoEbmFtZRgBIAEoCRIMCgRwYXRoGAIgASgJEg8KB2NvbHVtbnMYAyADKAki8AEKBlNvdXJjZRIMCgRuYW1lGAEgASgJEhgKC2Rlc2NyaXB0aW9uGAIgASgJSACIAQESDAoEcGF0aBgDIAEoCRIMCgR0YWdzGAYgAygJEhEKCWZpbGVfcGF0aBgEIAEoCRI2Cgdjb2x1bW5zGAUgAygLMiUucXVhcnkuc2VydmljZS52MS5Tb3VyY2UuU291cmNlQ29sdW1uGkcKDFNvdXJjZUNvbHVtbhINCgV0aXRsZRgBIAEoCRIYCgtkZXNjcmlwdGlvbhgCIAEoCUgAiAEBQg4KDF9kZXNjcmlwdGlvbkIOCgxfZGVzY3JpcHRpb25CAlABYgZwcm90bzM", [file_google_protobuf_struct]);

/**
 * @generated from message quary.service.v1.Test
 */
export type Test = Message<"quary.service.v1.Test"> & {
  /**
   * @generated from oneof quary.service.v1.Test.test_type
   */
  testType: {
    /**
     * @generated from field: quary.service.v1.TestSQLFile sql = 1;
     */
    value: TestSQLFile;
    case: "sql";
  } | {
    /**
     * @generated from field: quary.service.v1.TestUnique unique = 2;
     */
    value: TestUnique;
    case: "unique";
  } | {
    /**
     * @generated from field: quary.service.v1.TestNotNull not_null = 3;
     */
    value: TestNotNull;
    case: "notNull";
  } | {
    /**
     * @generated from field: quary.service.v1.TestRelationship relationship = 4;
     */
    value: TestRelationship;
    case: "relationship";
  } | {
    /**
     * @generated from field: quary.service.v1.TestAcceptedValues accepted_values = 5;
     */
    value: TestAcceptedValues;
    case: "acceptedValues";
  } | {
    /**
     * @generated from field: quary.service.v1.TestGreaterThanOrEqual greater_than_or_equal = 6;
     */
    value: TestGreaterThanOrEqual;
    case: "greaterThanOrEqual";
  } | {
    /**
     * @generated from field: quary.service.v1.TestLessThanOrEqual less_than_or_equal = 7;
     */
    value: TestLessThanOrEqual;
    case: "lessThanOrEqual";
  } | {
    /**
     * @generated from field: quary.service.v1.TestGreaterThan greater_than = 8;
     */
    value: TestGreaterThan;
    case: "greaterThan";
  } | {
    /**
     * @generated from field: quary.service.v1.TestLessThan less_than = 9;
     */
    value: TestLessThan;
    case: "lessThan";
  } | {
    /**
     * @generated from field: quary.service.v1.TestMultiColumnUnique multi_column_unique = 10;
     */
    value: TestMultiColumnUnique;
    case: "multiColumnUnique";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message quary.service.v1.Test.
 * Use `create(TestSchema)` to create a new message.
 */
export const TestSchema: GenMessage<Test> = /*@__PURE__*/
  messageDesc(file_quary_service_v1_types, 0);

/**
 * @generated from message quary.service.v1.TestSQLFile
 */
export type TestSQLFile = Message<"quary.service.v1.TestSQLFile"> & {
  /**
   * @generated from field: string file_path = 1;
   */
  filePath: string;

  /**
   * @generated from field: repeated string references = 2;
   */
  references: string[];
};

/**
 * Describes the message quary.service.v1.TestSQLFile.
 * Use `create(TestSQLFileSchema)` to create a new message.
 */
export const TestSQLFileSchema: GenMessage<TestSQLFile> = /*@__PURE__*/
  messageDesc(file_quary_service_v1_types, 1);

/**
 * @generated from message quary.service.v1.TestUnique
 */
export type TestUnique = Message<"quary.service.v1.TestUnique"> & {
  /**
   * @generated from field: string file_path = 1;
   */
  filePath: string;

  /**
   * @generated from field: string model = 2;
   */
  model: string;

  /**
   * @generated from field: string path = 3;
   */
  path: string;

  /**
   * @generated from field: string column = 4;
   */
  column: string;
};

/**
 * Describes the message quary.service.v1.TestUnique.
 * Use `create(TestUniqueSchema)` to create a new message.
 */
export const TestUniqueSchema: GenMessage<TestUnique> = /*@__PURE__*/
  messageDesc(file_quary_service_v1_types, 2);

/**
 * @generated from message quary.service.v1.TestNotNull
 */
export type TestNotNull = Message<"quary.service.v1.TestNotNull"> & {
  /**
   * @generated from field: string file_path = 1;
   */
  filePath: string;

  /**
   * @generated from field: string model = 2;
   */
  model: string;

  /**
   * @generated from field: string path = 3;
   */
  path: string;

  /**
   * @generated from field: string column = 4;
   */
  column: string;
};

/**
 * Describes the message quary.service.v1.TestNotNull.
 * Use `create(TestNotNullSchema)` to create a new message.
 */
export const TestNotNullSchema: GenMessage<TestNotNull> = /*@__PURE__*/
  messageDesc(file_quary_service_v1_types, 3);

/**
 * @generated from message quary.service.v1.TestGreaterThanOrEqual
 */
export type TestGreaterThanOrEqual = Message<"quary.service.v1.TestGreaterThanOrEqual"> & {
  /**
   * @generated from field: string file_path = 1;
   */
  filePath: string;

  /**
   * @generated from field: string model = 2;
   */
  model: string;

  /**
   * @generated from field: string path = 3;
   */
  path: string;

  /**
   * @generated from field: string column = 4;
   */
  column: string;

  /**
   * @generated from field: string value = 5;
   */
  value: string;
};

/**
 * Describes the message quary.service.v1.TestGreaterThanOrEqual.
 * Use `create(TestGreaterThanOrEqualSchema)` to create a new message.
 */
export const TestGreaterThanOrEqualSchema: GenMessage<TestGreaterThanOrEqual> = /*@__PURE__*/
  messageDesc(file_quary_service_v1_types, 4);

/**
 * @generated from message quary.service.v1.TestLessThanOrEqual
 */
export type TestLessThanOrEqual = Message<"quary.service.v1.TestLessThanOrEqual"> & {
  /**
   * @generated from field: string file_path = 1;
   */
  filePath: string;

  /**
   * @generated from field: string model = 2;
   */
  model: string;

  /**
   * @generated from field: string path = 3;
   */
  path: string;

  /**
   * @generated from field: string column = 4;
   */
  column: string;

  /**
   * @generated from field: string value = 5;
   */
  value: string;
};

/**
 * Describes the message quary.service.v1.TestLessThanOrEqual.
 * Use `create(TestLessThanOrEqualSchema)` to create a new message.
 */
export const TestLessThanOrEqualSchema: GenMessage<TestLessThanOrEqual> = /*@__PURE__*/
  messageDesc(file_quary_service_v1_types, 5);

/**
 * @generated from message quary.service.v1.TestGreaterThan
 */
export type TestGreaterThan = Message<"quary.service.v1.TestGreaterThan"> & {
  /**
   * @generated from field: string file_path = 1;
   */
  filePath: string;

  /**
   * @generated from field: string model = 2;
   */
  model: string;

  /**
   * @generated from field: string path = 3;
   */
  path: string;

  /**
   * @generated from field: string column = 4;
   */
  column: string;

  /**
   * @generated from field: string value = 5;
   */
  value: string;
};

/**
 * Describes the message quary.service.v1.TestGreaterThan.
 * Use `create(TestGreaterThanSchema)` to create a new message.
 */
export const TestGreaterThanSchema: GenMessage<TestGreaterThan> = /*@__PURE__*/
  messageDesc(file_quary_service_v1_types, 6);

/**
 * @generated from message quary.service.v1.TestLessThan
 */
export type TestLessThan = Message<"quary.service.v1.TestLessThan"> & {
  /**
   * @generated from field: string file_path = 1;
   */
  filePath: string;

  /**
   * @generated from field: string model = 2;
   */
  model: string;

  /**
   * @generated from field: string path = 3;
   */
  path: string;

  /**
   * @generated from field: string column = 4;
   */
  column: string;

  /**
   * @generated from field: string value = 5;
   */
  value: string;
};

/**
 * Describes the message quary.service.v1.TestLessThan.
 * Use `create(TestLessThanSchema)` to create a new message.
 */
export const TestLessThanSchema: GenMessage<TestLessThan> = /*@__PURE__*/
  messageDesc(file_quary_service_v1_types, 7);

/**
 * @generated from message quary.service.v1.TestRelationship
 */
export type TestRelationship = Message<"quary.service.v1.TestRelationship"> & {
  /**
   * @generated from field: string file_path = 1;
   */
  filePath: string;

  /**
   * @generated from field: string source_model = 2;
   */
  sourceModel: string;

  /**
   * @generated from field: string source_path = 3;
   */
  sourcePath: string;

  /**
   * @generated from field: string source_column = 4;
   */
  sourceColumn: string;

  /**
   * @generated from field: string target_model = 5;
   */
  targetModel: string;

  /**
   * @generated from field: string target_path = 7;
   */
  targetPath: string;

  /**
   * @generated from field: string target_column = 8;
   */
  targetColumn: string;
};

/**
 * Describes the message quary.service.v1.TestRelationship.
 * Use `create(TestRelationshipSchema)` to create a new message.
 */
export const TestRelationshipSchema: GenMessage<TestRelationship> = /*@__PURE__*/
  messageDesc(file_quary_service_v1_types, 8);

/**
 * @generated from message quary.service.v1.TestAcceptedValues
 */
export type TestAcceptedValues = Message<"quary.service.v1.TestAcceptedValues"> & {
  /**
   * @generated from field: string file_path = 1;
   */
  filePath: string;

  /**
   * @generated from field: string model = 2;
   */
  model: string;

  /**
   * @generated from field: string path = 3;
   */
  path: string;

  /**
   * @generated from field: string column = 4;
   */
  column: string;

  /**
   * @generated from field: repeated string accepted_values = 5;
   */
  acceptedValues: string[];
};

/**
 * Describes the message quary.service.v1.TestAcceptedValues.
 * Use `create(TestAcceptedValuesSchema)` to create a new message.
 */
export const TestAcceptedValuesSchema: GenMessage<TestAcceptedValues> = /*@__PURE__*/
  messageDesc(file_quary_service_v1_types, 9);

/**
 * @generated from message quary.service.v1.TestMultiColumnUnique
 */
export type TestMultiColumnUnique = Message<"quary.service.v1.TestMultiColumnUnique"> & {
  /**
   * @generated from field: string file_path = 1;
   */
  filePath: string;

  /**
   * @generated from field: string model = 2;
   */
  model: string;

  /**
   * @generated from field: string path = 3;
   */
  path: string;

  /**
   * @generated from field: repeated string columns = 4;
   */
  columns: string[];
};

/**
 * Describes the message quary.service.v1.TestMultiColumnUnique.
 * Use `create(TestMultiColumnUniqueSchema)` to create a new message.
 */
export const TestMultiColumnUniqueSchema: GenMessage<TestMultiColumnUnique> = /*@__PURE__*/
  messageDesc(file_quary_service_v1_types, 10);

/**
 * @generated from message quary.service.v1.Seed
 */
export type Seed = Message<"quary.service.v1.Seed"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string file_path = 2;
   */
  filePath: string;

  /**
   * @generated from field: string file_sha256_hash = 3;
   */
  fileSha256Hash: string;
};

/**
 * Describes the message quary.service.v1.Seed.
 * Use `create(SeedSchema)` to create a new message.
 */
export const SeedSchema: GenMessage<Seed> = /*@__PURE__*/
  messageDesc(file_quary_service_v1_types, 11);

/**
 * @generated from message quary.service.v1.Model
 */
export type Model = Message<"quary.service.v1.Model"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: optional string description = 2;
   */
  description?: string;

  /**
   * Tags are used to group different parts of the project together.
   *
   * @generated from field: repeated string tags = 4;
   */
  tags: string[];

  /**
   * @generated from field: string file_path = 3;
   */
  filePath: string;

  /**
   * @generated from field: string file_sha256_hash = 7;
   */
  fileSha256Hash: string;

  /**
   * @generated from field: optional string materialization = 8;
   */
  materialization?: string;

  /**
   * @generated from field: repeated quary.service.v1.Model.ModelColum columns = 5;
   */
  columns: Model_ModelColum[];

  /**
   * References to other models/seeds/snapshots that are used in the model. These are unique keys and sorted
   * alphabetically.
   *
   * @generated from field: repeated string references = 6;
   */
  references: string[];

  /**
   * @generated from field: optional google.protobuf.Struct database_config = 9;
   */
  databaseConfig?: JsonObject;
};

/**
 * Describes the message quary.service.v1.Model.
 * Use `create(ModelSchema)` to create a new message.
 */
export const ModelSchema: GenMessage<Model> = /*@__PURE__*/
  messageDesc(file_quary_service_v1_types, 12);

/**
 * @generated from message quary.service.v1.Model.ModelColum
 */
export type Model_ModelColum = Message<"quary.service.v1.Model.ModelColum"> & {
  /**
   * @generated from field: string title = 1;
   */
  title: string;

  /**
   * @generated from field: optional string description = 2;
   */
  description?: string;
};

/**
 * Describes the message quary.service.v1.Model.ModelColum.
 * Use `create(Model_ModelColumSchema)` to create a new message.
 */
export const Model_ModelColumSchema: GenMessage<Model_ModelColum> = /*@__PURE__*/
  messageDesc(file_quary_service_v1_types, 12, 0);

/**
 * @generated from message quary.service.v1.Snapshot
 */
export type Snapshot = Message<"quary.service.v1.Snapshot"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: optional string description = 2;
   */
  description?: string;

  /**
   * Tags are used to group different parts of the project together.
   *
   * @generated from field: repeated string tags = 8;
   */
  tags: string[];

  /**
   * @generated from field: string file_path = 3;
   */
  filePath: string;

  /**
   * @generated from field: string file_sha256_hash = 4;
   */
  fileSha256Hash: string;

  /**
   * @generated from field: string unique_key = 5;
   */
  uniqueKey: string;

  /**
   * @generated from field: quary.service.v1.Snapshot.SnapshotStrategy strategy = 6;
   */
  strategy?: Snapshot_SnapshotStrategy;

  /**
   * References to other seeds/sources that are used in the snapshot. These are unique keys and sorted
   * alphabetically.
   *
   * @generated from field: repeated string references = 7;
   */
  references: string[];
};

/**
 * Describes the message quary.service.v1.Snapshot.
 * Use `create(SnapshotSchema)` to create a new message.
 */
export const SnapshotSchema: GenMessage<Snapshot> = /*@__PURE__*/
  messageDesc(file_quary_service_v1_types, 13);

/**
 * @generated from message quary.service.v1.Snapshot.SnapshotStrategy
 */
export type Snapshot_SnapshotStrategy = Message<"quary.service.v1.Snapshot.SnapshotStrategy"> & {
  /**
   * @generated from oneof quary.service.v1.Snapshot.SnapshotStrategy.strategy_type
   */
  strategyType: {
    /**
     * @generated from field: quary.service.v1.Snapshot.SnapshotStrategy.TimestampStrategy timestamp = 1;
     */
    value: Snapshot_SnapshotStrategy_TimestampStrategy;
    case: "timestamp";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message quary.service.v1.Snapshot.SnapshotStrategy.
 * Use `create(Snapshot_SnapshotStrategySchema)` to create a new message.
 */
export const Snapshot_SnapshotStrategySchema: GenMessage<Snapshot_SnapshotStrategy> = /*@__PURE__*/
  messageDesc(file_quary_service_v1_types, 13, 0);

/**
 * @generated from message quary.service.v1.Snapshot.SnapshotStrategy.TimestampStrategy
 */
export type Snapshot_SnapshotStrategy_TimestampStrategy = Message<"quary.service.v1.Snapshot.SnapshotStrategy.TimestampStrategy"> & {
  /**
   * @generated from field: string updated_at = 1;
   */
  updatedAt: string;
};

/**
 * Describes the message quary.service.v1.Snapshot.SnapshotStrategy.TimestampStrategy.
 * Use `create(Snapshot_SnapshotStrategy_TimestampStrategySchema)` to create a new message.
 */
export const Snapshot_SnapshotStrategy_TimestampStrategySchema: GenMessage<Snapshot_SnapshotStrategy_TimestampStrategy> = /*@__PURE__*/
  messageDesc(file_quary_service_v1_types, 13, 0, 0);

/**
 * Generic source structure, used as input to generate the quary-specific source structure
 *
 * @generated from message quary.service.v1.DatabaseSource
 */
export type DatabaseSource = Message<"quary.service.v1.DatabaseSource"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string path = 2;
   */
  path: string;

  /**
   * @generated from field: repeated string columns = 3;
   */
  columns: string[];
};

/**
 * Describes the message quary.service.v1.DatabaseSource.
 * Use `create(DatabaseSourceSchema)` to create a new message.
 */
export const DatabaseSourceSchema: GenMessage<DatabaseSource> = /*@__PURE__*/
  messageDesc(file_quary_service_v1_types, 14);

/**
 * @generated from message quary.service.v1.Source
 */
export type Source = Message<"quary.service.v1.Source"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: optional string description = 2;
   */
  description?: string;

  /**
   * @generated from field: string path = 3;
   */
  path: string;

  /**
   * Tags are used to group different parts of the project together.
   *
   * @generated from field: repeated string tags = 6;
   */
  tags: string[];

  /**
   * TODO Replace File path references with whole file references
   *
   * @generated from field: string file_path = 4;
   */
  filePath: string;

  /**
   * @generated from field: repeated quary.service.v1.Source.SourceColumn columns = 5;
   */
  columns: Source_SourceColumn[];
};

/**
 * Describes the message quary.service.v1.Source.
 * Use `create(SourceSchema)` to create a new message.
 */
export const SourceSchema: GenMessage<Source> = /*@__PURE__*/
  messageDesc(file_quary_service_v1_types, 15);

/**
 * @generated from message quary.service.v1.Source.SourceColumn
 */
export type Source_SourceColumn = Message<"quary.service.v1.Source.SourceColumn"> & {
  /**
   * @generated from field: string title = 1;
   */
  title: string;

  /**
   * @generated from field: optional string description = 2;
   */
  description?: string;
};

/**
 * Describes the message quary.service.v1.Source.SourceColumn.
 * Use `create(Source_SourceColumnSchema)` to create a new message.
 */
export const Source_SourceColumnSchema: GenMessage<Source_SourceColumn> = /*@__PURE__*/
  messageDesc(file_quary_service_v1_types, 15, 0);

