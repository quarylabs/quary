// @generated by protoc-gen-es v2.0.0 with parameter "target=ts"
// @generated from file quary/service/v1/connection_response.proto (package quary.service.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file quary/service/v1/connection_response.proto.
 */
export const file_quary_service_v1_connection_response: GenFile = /*@__PURE__*/
  fileDesc("CipxdWFyeS9zZXJ2aWNlL3YxL2Nvbm5lY3Rpb25fcmVzcG9uc2UucHJvdG8SEHF1YXJ5LnNlcnZpY2UudjEiLgoYQmlnUXVlcnlQcm9qZWN0UmVmZXJlbmNlEhIKCnByb2plY3RfaWQYASABKAkinQEKD0JpZ1F1ZXJ5UHJvamVjdBIMCgRraW5kGAEgASgJEgoKAmlkGAIgASgJEhIKCm51bWVyaWNfaWQYAyABKAkSRQoRcHJvamVjdF9yZWZlcmVuY2UYBCABKAsyKi5xdWFyeS5zZXJ2aWNlLnYxLkJpZ1F1ZXJ5UHJvamVjdFJlZmVyZW5jZRIVCg1mcmllbmRseV9uYW1lGAUgASgJIkIKGEJpZ1F1ZXJ5RGF0YXNldFJlZmVyZW5jZRISCgpwcm9qZWN0X2lkGAEgASgJEhIKCmRhdGFzZXRfaWQYAiABKAkiiQIKD0JpZ1F1ZXJ5RGF0YXNldBIMCgRraW5kGAEgASgJEgoKAmlkGAIgASgJEkUKEWRhdGFzZXRfcmVmZXJlbmNlGAMgASgLMioucXVhcnkuc2VydmljZS52MS5CaWdRdWVyeURhdGFzZXRSZWZlcmVuY2USFQoNZnJpZW5kbHlfbmFtZRgEIAEoCRI9CgZsYWJlbHMYBSADKAsyLS5xdWFyeS5zZXJ2aWNlLnYxLkJpZ1F1ZXJ5RGF0YXNldC5MYWJlbHNFbnRyeRIQCghsb2NhdGlvbhgGIAEoCRotCgtMYWJlbHNFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBIlIKFkJpZ1F1ZXJ5VGFibGVSZWZlcmVuY2USEgoKcHJvamVjdF9pZBgBIAEoCRISCgpkYXRhc2V0X2lkGAIgASgJEhAKCHRhYmxlX2lkGAMgASgJIpEBCg1CaWdRdWVyeVRhYmxlEgwKBGtpbmQYASABKAkSCgoCaWQYAiABKAkSQQoPdGFibGVfcmVmZXJlbmNlGAMgASgLMigucXVhcnkuc2VydmljZS52MS5CaWdRdWVyeVRhYmxlUmVmZXJlbmNlEgwKBHR5cGUYBCABKAkSFQoNY3JlYXRpb25fdGltZRgFIAEoCSKJAQoSQmlnUXVlcnlUYWJsZUZpZWxkEgwKBG5hbWUYASABKAkSDAoEdHlwZRgCIAEoCRIMCgRtb2RlGAMgASgJEjQKBmZpZWxkcxgEIAMoCzIkLnF1YXJ5LnNlcnZpY2UudjEuQmlnUXVlcnlUYWJsZUZpZWxkEhMKC2Rlc2NyaXB0aW9uGAUgASgJInwKE0JpZ1F1ZXJ5VGFibGVTY2hlbWESDAoEbmFtZRgBIAEoCRIMCgR0eXBlGAIgASgJEjQKBmZpZWxkcxgDIAMoCzIkLnF1YXJ5LnNlcnZpY2UudjEuQmlnUXVlcnlUYWJsZUZpZWxkEhMKC2Rlc2NyaXB0aW9uGAQgASgJIkwKFEJpZ1F1ZXJ5Sm9iUmVmZXJlbmNlEhIKCnByb2plY3RfaWQYASABKAkSDgoGam9iX2lkGAIgASgJEhAKCGxvY2F0aW9uGAMgASgJIlYKDUJpZ1F1ZXJ5RXJyb3ISDgoGcmVhc29uGAEgASgJEhAKCGxvY2F0aW9uGAIgASgJEhIKCmRlYnVnX2luZm8YAyABKAkSDwoHbWVzc2FnZRgEIAEoCSJPChFCaWdRdWVyeUpvYlN0YXR1cxINCgVzdGF0ZRgBIAEoCRIUCgxlcnJvcl9yZXN1bHQYAiABKAkSFQoNZXJyb3JfbWVzc2FnZRgDIAEoCSLCAQoLQmlnUXVlcnlKb2ISDAoEa2luZBgBIAEoCRIKCgJpZBgCIAEoCRIRCglzZWxmX2xpbmsYAyABKAkSEgoKdXNlcl9lbWFpbBgEIAEoCRI9Cg1qb2JfcmVmZXJlbmNlGAUgASgLMiYucXVhcnkuc2VydmljZS52MS5CaWdRdWVyeUpvYlJlZmVyZW5jZRIzCgZzdGF0dXMYBiABKAsyIy5xdWFyeS5zZXJ2aWNlLnYxLkJpZ1F1ZXJ5Sm9iU3RhdHVzIioKEkJpZ1F1ZXJ5RmllbGRWYWx1ZRIJCgFmGAEgASgJEgkKAXYYAiABKAkiQwoQQmlnUXVlcnlUYWJsZVJvdxIvCgFmGAEgAygLMiQucXVhcnkuc2VydmljZS52MS5CaWdRdWVyeUZpZWxkVmFsdWUi6wIKEkJpZ1F1ZXJ5Sm9iUmVzdWx0cxIMCgRraW5kGAEgASgJEjUKBnNjaGVtYRgCIAEoCzIlLnF1YXJ5LnNlcnZpY2UudjEuQmlnUXVlcnlUYWJsZVNjaGVtYRI9Cg1qb2JfcmVmZXJlbmNlGAMgASgLMiYucXVhcnkuc2VydmljZS52MS5CaWdRdWVyeUpvYlJlZmVyZW5jZRISCgp0b3RhbF9yb3dzGAQgASgJEhIKCnBhZ2VfdG9rZW4YBSABKAkSMAoEcm93cxgGIAMoCzIiLnF1YXJ5LnNlcnZpY2UudjEuQmlnUXVlcnlUYWJsZVJvdxIUCgxqb2JfY29tcGxldGUYByABKAkSLwoGZXJyb3JzGAggAygLMh8ucXVhcnkuc2VydmljZS52MS5CaWdRdWVyeUVycm9yEhEKCWNhY2hlX2hpdBgJIAEoCRIdChVudW1fZG1sX2FmZmVjdGVkX3Jvd3MYCiABKAkiVgoSQmlnUXVlcnlPYXV0aFRva2VuEhQKDGFjY2Vzc190b2tlbhgBIAEoCRIVCg1yZWZyZXNoX3Rva2VuGAIgASgJEhMKC2V4cGlyeV90aW1lGAMgASgJIkYKGUJpZ1F1ZXJ5T2F1dGhUb2tlblJlZnJlc2gSFAoMYWNjZXNzX3Rva2VuGAEgASgJEhMKC2V4cGlyeV90aW1lGAIgASgJImkKGlNub3dmbGFrZU9hdXRoUHJveHlSZXF1ZXN0EhMKC2FjY291bnRfdXJsGAEgASgJEhEKCWNsaWVudF9pZBgCIAEoCRIVCg1jbGllbnRfc2VjcmV0GAMgASgJEgwKBHJvbGUYBCABKAkiVwoTU25vd2ZsYWtlT2F1dGhUb2tlbhIUCgxhY2Nlc3NfdG9rZW4YASABKAkSFQoNcmVmcmVzaF90b2tlbhgCIAEoCRITCgtleHBpcnlfdGltZRgDIAEoCSJHChpTbm93Zmxha2VPYXV0aFJlZnJlc2hUb2tlbhIUCgxhY2Nlc3NfdG9rZW4YASABKAkSEwoLZXhwaXJ5X3RpbWUYAyABKAlCAlABYgZwcm90bzM");

/**
 * @generated from message quary.service.v1.BigQueryProjectReference
 */
export type BigQueryProjectReference = Message<"quary.service.v1.BigQueryProjectReference"> & {
  /**
   * @generated from field: string project_id = 1;
   */
  projectId: string;
};

/**
 * Describes the message quary.service.v1.BigQueryProjectReference.
 * Use `create(BigQueryProjectReferenceSchema)` to create a new message.
 */
export const BigQueryProjectReferenceSchema: GenMessage<BigQueryProjectReference> = /*@__PURE__*/
  messageDesc(file_quary_service_v1_connection_response, 0);

/**
 * Project API Documentation: https://cloud.google.com/bigquery/docs/reference/rest/v2/projects/list
 *
 * @generated from message quary.service.v1.BigQueryProject
 */
export type BigQueryProject = Message<"quary.service.v1.BigQueryProject"> & {
  /**
   * The resource type.
   *
   * @generated from field: string kind = 1;
   */
  kind: string;

  /**
   * An opaque ID of this project.
   *
   * @generated from field: string id = 2;
   */
  id: string;

  /**
   * The numeric ID of this project.
   *
   * @generated from field: string numeric_id = 3;
   */
  numericId: string;

  /**
   * A unique reference to a project.
   *
   * @generated from field: quary.service.v1.BigQueryProjectReference project_reference = 4;
   */
  projectReference?: BigQueryProjectReference;

  /**
   * A descriptive name for this project.
   *
   * @generated from field: string friendly_name = 5;
   */
  friendlyName: string;
};

/**
 * Describes the message quary.service.v1.BigQueryProject.
 * Use `create(BigQueryProjectSchema)` to create a new message.
 */
export const BigQueryProjectSchema: GenMessage<BigQueryProject> = /*@__PURE__*/
  messageDesc(file_quary_service_v1_connection_response, 1);

/**
 * Dataset Reference API Documentation: https://cloud.google.com/bigquery/docs/reference/rest/v2/datasets#DatasetReference
 *
 * @generated from message quary.service.v1.BigQueryDatasetReference
 */
export type BigQueryDatasetReference = Message<"quary.service.v1.BigQueryDatasetReference"> & {
  /**
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * @generated from field: string dataset_id = 2;
   */
  datasetId: string;
};

/**
 * Describes the message quary.service.v1.BigQueryDatasetReference.
 * Use `create(BigQueryDatasetReferenceSchema)` to create a new message.
 */
export const BigQueryDatasetReferenceSchema: GenMessage<BigQueryDatasetReference> = /*@__PURE__*/
  messageDesc(file_quary_service_v1_connection_response, 2);

/**
 * Dataset API Documentation: https://cloud.google.com/bigquery/docs/reference/rest/v2/datasets/list
 *
 * @generated from message quary.service.v1.BigQueryDataset
 */
export type BigQueryDataset = Message<"quary.service.v1.BigQueryDataset"> & {
  /**
   * The resource type. This property always returns the value "bigquery#dataset"
   *
   * @generated from field: string kind = 1;
   */
  kind: string;

  /**
   * The fully-qualified, unique, opaque ID of the dataset.
   *
   * @generated from field: string id = 2;
   */
  id: string;

  /**
   * The dataset reference. Use this property to access specific parts of the dataset's ID, such as project ID or dataset ID.
   *
   * @generated from field: quary.service.v1.BigQueryDatasetReference dataset_reference = 3;
   */
  datasetReference?: BigQueryDatasetReference;

  /**
   * An alternate name for the dataset. The friendly name is purely decorative in nature.
   *
   * @generated from field: string friendly_name = 4;
   */
  friendlyName: string;

  /**
   * The labels associated with this dataset. You can use these to organize and group your datasets.
   *
   * @generated from field: map<string, string> labels = 5;
   */
  labels: { [key: string]: string };

  /**
   * The geographic location where the dataset resides.
   *
   * @generated from field: string location = 6;
   */
  location: string;
};

/**
 * Describes the message quary.service.v1.BigQueryDataset.
 * Use `create(BigQueryDatasetSchema)` to create a new message.
 */
export const BigQueryDatasetSchema: GenMessage<BigQueryDataset> = /*@__PURE__*/
  messageDesc(file_quary_service_v1_connection_response, 3);

/**
 * Table Reference API Documentation: https://cloud.google.com/bigquery/docs/reference/rest/v2/tables#TableReference
 *
 * @generated from message quary.service.v1.BigQueryTableReference
 */
export type BigQueryTableReference = Message<"quary.service.v1.BigQueryTableReference"> & {
  /**
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * @generated from field: string dataset_id = 2;
   */
  datasetId: string;

  /**
   * @generated from field: string table_id = 3;
   */
  tableId: string;
};

/**
 * Describes the message quary.service.v1.BigQueryTableReference.
 * Use `create(BigQueryTableReferenceSchema)` to create a new message.
 */
export const BigQueryTableReferenceSchema: GenMessage<BigQueryTableReference> = /*@__PURE__*/
  messageDesc(file_quary_service_v1_connection_response, 4);

/**
 * Table API Documentation: https://cloud.google.com/bigquery/docs/reference/rest/v2/tables/list
 *
 * @generated from message quary.service.v1.BigQueryTable
 */
export type BigQueryTable = Message<"quary.service.v1.BigQueryTable"> & {
  /**
   * The resource type.
   *
   * @generated from field: string kind = 1;
   */
  kind: string;

  /**
   * An opaque ID uniquely identifying the table.
   *
   * @generated from field: string id = 2;
   */
  id: string;

  /**
   * A reference uniquely identifying the table.
   *
   * @generated from field: quary.service.v1.BigQueryTableReference table_reference = 3;
   */
  tableReference?: BigQueryTableReference;

  /**
   * The type of table. Possible values are: TABLE, VIEW.
   *
   * @generated from field: string type = 4;
   */
  type: string;

  /**
   * The time when this table was created, in milliseconds since the epoch.
   *
   * @generated from field: string creation_time = 5;
   */
  creationTime: string;
};

/**
 * Describes the message quary.service.v1.BigQueryTable.
 * Use `create(BigQueryTableSchema$)` to create a new message.
 */
export const BigQueryTableSchema$: GenMessage<BigQueryTable> = /*@__PURE__*/
  messageDesc(file_quary_service_v1_connection_response, 5);

/**
 * Table Field API Documentation: https://cloud.google.com/bigquery/docs/reference/rest/v2/tables#TableFieldSchema
 *
 * @generated from message quary.service.v1.BigQueryTableField
 */
export type BigQueryTableField = Message<"quary.service.v1.BigQueryTableField"> & {
  /**
   * The field name.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The field data type. Possible values are: STRING, INTEGER, FLOAT, BOOLEAN, TIMESTAMP.
   *
   * @generated from field: string type = 2;
   */
  type: string;

  /**
   * The field mode. Possible values are: NULLABLE, REQUIRED, REPEATED.
   *
   * @generated from field: string mode = 3;
   */
  mode: string;

  /**
   * Describes the nested schema fields if the type property is set to RECORD.
   *
   * @generated from field: repeated quary.service.v1.BigQueryTableField fields = 4;
   */
  fields: BigQueryTableField[];

  /**
   * The field description.
   *
   * @generated from field: string description = 5;
   */
  description: string;
};

/**
 * Describes the message quary.service.v1.BigQueryTableField.
 * Use `create(BigQueryTableFieldSchema)` to create a new message.
 */
export const BigQueryTableFieldSchema: GenMessage<BigQueryTableField> = /*@__PURE__*/
  messageDesc(file_quary_service_v1_connection_response, 6);

/**
 * Table Schema API Documentation: https://cloud.google.com/bigquery/docs/reference/rest/v2/tables#TableSchema
 *
 * @generated from message quary.service.v1.BigQueryTableSchema
 */
export type BigQueryTableSchema = Message<"quary.service.v1.BigQueryTableSchema"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string type = 2;
   */
  type: string;

  /**
   * Describes the fields in a table.
   *
   * @generated from field: repeated quary.service.v1.BigQueryTableField fields = 3;
   */
  fields: BigQueryTableField[];

  /**
   * The field description.
   *
   * @generated from field: string description = 4;
   */
  description: string;
};

/**
 * Describes the message quary.service.v1.BigQueryTableSchema.
 * Use `create(BigQueryTableSchemaSchema)` to create a new message.
 */
export const BigQueryTableSchemaSchema: GenMessage<BigQueryTableSchema> = /*@__PURE__*/
  messageDesc(file_quary_service_v1_connection_response, 7);

/**
 * JobReference API Documentation: https://cloud.google.com/bigquery/docs/reference/rest/v2/JobReference
 *
 * @generated from message quary.service.v1.BigQueryJobReference
 */
export type BigQueryJobReference = Message<"quary.service.v1.BigQueryJobReference"> & {
  /**
   * The ID of the project containing this job.
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * The ID of the job.
   *
   * @generated from field: string job_id = 2;
   */
  jobId: string;

  /**
   * The geographic location of the job.
   *
   * @generated from field: string location = 3;
   */
  location: string;
};

/**
 * Describes the message quary.service.v1.BigQueryJobReference.
 * Use `create(BigQueryJobReferenceSchema)` to create a new message.
 */
export const BigQueryJobReferenceSchema: GenMessage<BigQueryJobReference> = /*@__PURE__*/
  messageDesc(file_quary_service_v1_connection_response, 8);

/**
 * BigQueryError API Documentation: https://cloud.google.com/bigquery/docs/reference/rest/v2/ErrorProto
 *
 * @generated from message quary.service.v1.BigQueryError
 */
export type BigQueryError = Message<"quary.service.v1.BigQueryError"> & {
  /**
   * A short error code that summarizes the error.
   *
   * @generated from field: string reason = 1;
   */
  reason: string;

  /**
   * The location of the error, if applicable.
   *
   * @generated from field: string location = 2;
   */
  location: string;

  /**
   * A human-readable description of the error.
   *
   * @generated from field: string debug_info = 3;
   */
  debugInfo: string;

  /**
   * A human-readable description of the error.
   *
   * @generated from field: string message = 4;
   */
  message: string;
};

/**
 * Describes the message quary.service.v1.BigQueryError.
 * Use `create(BigQueryErrorSchema)` to create a new message.
 */
export const BigQueryErrorSchema: GenMessage<BigQueryError> = /*@__PURE__*/
  messageDesc(file_quary_service_v1_connection_response, 9);

/**
 * JobStatus API Documentation: https://cloud.google.com/bigquery/docs/reference/rest/v2/JobStatus
 *
 * @generated from message quary.service.v1.BigQueryJobStatus
 */
export type BigQueryJobStatus = Message<"quary.service.v1.BigQueryJobStatus"> & {
  /**
   * The state of the job. Possible values include: "PENDING", "RUNNING", "DONE".
   *
   * @generated from field: string state = 1;
   */
  state: string;

  /**
   * Final error result of the job. If present, indicates that the job has completed and was unsuccessful.
   *
   * @generated from field: string error_result = 2;
   */
  errorResult: string;

  /**
   * The final error result of the job as a human-readable string.
   *
   * @generated from field: string error_message = 3;
   */
  errorMessage: string;
};

/**
 * Describes the message quary.service.v1.BigQueryJobStatus.
 * Use `create(BigQueryJobStatusSchema)` to create a new message.
 */
export const BigQueryJobStatusSchema: GenMessage<BigQueryJobStatus> = /*@__PURE__*/
  messageDesc(file_quary_service_v1_connection_response, 10);

/**
 * Job API Documentation: https://cloud.google.com/bigquery/docs/reference/rest/v2/Job
 *
 * @generated from message quary.service.v1.BigQueryJob
 */
export type BigQueryJob = Message<"quary.service.v1.BigQueryJob"> & {
  /**
   * The resource type.
   *
   * @generated from field: string kind = 1;
   */
  kind: string;

  /**
   * An opaque ID uniquely identifying the job.
   *
   * @generated from field: string id = 2;
   */
  id: string;

  /**
   * A URL that can be used to access this resource again.
   *
   * @generated from field: string self_link = 3;
   */
  selfLink: string;

  /**
   * The email address of the user who ran the job.
   *
   * @generated from field: string user_email = 4;
   */
  userEmail: string;

  /**
   * A reference uniquely identifying the job.
   *
   * @generated from field: quary.service.v1.BigQueryJobReference job_reference = 5;
   */
  jobReference?: BigQueryJobReference;

  /**
   * Information about the job, including starting time and ending time of the job.
   *
   * @generated from field: quary.service.v1.BigQueryJobStatus status = 6;
   */
  status?: BigQueryJobStatus;
};

/**
 * Describes the message quary.service.v1.BigQueryJob.
 * Use `create(BigQueryJobSchema)` to create a new message.
 */
export const BigQueryJobSchema: GenMessage<BigQueryJob> = /*@__PURE__*/
  messageDesc(file_quary_service_v1_connection_response, 11);

/**
 * @generated from message quary.service.v1.BigQueryFieldValue
 */
export type BigQueryFieldValue = Message<"quary.service.v1.BigQueryFieldValue"> & {
  /**
   * Represents the 'f' in a JSON object
   *
   * @generated from field: string f = 1;
   */
  f: string;

  /**
   * Represents the 'v' in a JSON object
   *
   * @generated from field: string v = 2;
   */
  v: string;
};

/**
 * Describes the message quary.service.v1.BigQueryFieldValue.
 * Use `create(BigQueryFieldValueSchema)` to create a new message.
 */
export const BigQueryFieldValueSchema: GenMessage<BigQueryFieldValue> = /*@__PURE__*/
  messageDesc(file_quary_service_v1_connection_response, 12);

/**
 * @generated from message quary.service.v1.BigQueryTableRow
 */
export type BigQueryTableRow = Message<"quary.service.v1.BigQueryTableRow"> & {
  /**
   * Represents a single row as a series of field-value pairs
   *
   * @generated from field: repeated quary.service.v1.BigQueryFieldValue f = 1;
   */
  f: BigQueryFieldValue[];
};

/**
 * Describes the message quary.service.v1.BigQueryTableRow.
 * Use `create(BigQueryTableRowSchema)` to create a new message.
 */
export const BigQueryTableRowSchema: GenMessage<BigQueryTableRow> = /*@__PURE__*/
  messageDesc(file_quary_service_v1_connection_response, 13);

/**
 * BigQueryJobResults API Documentation: https://cloud.google.com/bigquery/docs/reference/rest/v2/jobs/getQueryResults
 *
 * @generated from message quary.service.v1.BigQueryJobResults
 */
export type BigQueryJobResults = Message<"quary.service.v1.BigQueryJobResults"> & {
  /**
   * The resource type.
   *
   * @generated from field: string kind = 1;
   */
  kind: string;

  /**
   * The schema of the results. Present only when the query completes successfully.
   *
   * @generated from field: quary.service.v1.BigQueryTableSchema schema = 2;
   */
  schema?: BigQueryTableSchema;

  /**
   * A reference uniquely identifying the job.
   *
   * @generated from field: quary.service.v1.BigQueryJobReference job_reference = 3;
   */
  jobReference?: BigQueryJobReference;

  /**
   * The total number of rows in the complete query result set, which can be more than the number of rows in this single page of results.
   *
   * @generated from field: string total_rows = 4;
   */
  totalRows: string;

  /**
   * A token used for paging results.
   *
   * @generated from field: string page_token = 5;
   */
  pageToken: string;

  /**
   * An object with as many results as can be contained within the maximum permitted reply size. To get any additional rows, you can call GetQueryResults and specify the jobReference returned above.
   *
   * @generated from field: repeated quary.service.v1.BigQueryTableRow rows = 6;
   */
  rows: BigQueryTableRow[];

  /**
   * Whether the query result was fetched from the query cache.
   *
   * @generated from field: string job_complete = 7;
   */
  jobComplete: string;

  /**
   * The first errors encountered during the running of the job. The final message includes the number of errors encountered.
   *
   * @generated from field: repeated quary.service.v1.BigQueryError errors = 8;
   */
  errors: BigQueryError[];

  /**
   * Whether the query result was fetched from the query cache.
   *
   * @generated from field: string cache_hit = 9;
   */
  cacheHit: string;

  /**
   * The number of rows affected by a DML statement. Present only for DML statements INSERT, UPDATE or DELETE.
   *
   * @generated from field: string num_dml_affected_rows = 10;
   */
  numDmlAffectedRows: string;
};

/**
 * Describes the message quary.service.v1.BigQueryJobResults.
 * Use `create(BigQueryJobResultsSchema)` to create a new message.
 */
export const BigQueryJobResultsSchema: GenMessage<BigQueryJobResults> = /*@__PURE__*/
  messageDesc(file_quary_service_v1_connection_response, 14);

/**
 * Google Oauth 2.0 token API Documentation: https://developers.google.com/identity/protocols/oauth2/web-server#httprest
 *
 * @generated from message quary.service.v1.BigQueryOauthToken
 */
export type BigQueryOauthToken = Message<"quary.service.v1.BigQueryOauthToken"> & {
  /**
   * short-lived token
   *
   * @generated from field: string access_token = 1;
   */
  accessToken: string;

  /**
   * @generated from field: string refresh_token = 2;
   */
  refreshToken: string;

  /**
   * absolute time the token expires
   *
   * @generated from field: string expiry_time = 3;
   */
  expiryTime: string;
};

/**
 * Describes the message quary.service.v1.BigQueryOauthToken.
 * Use `create(BigQueryOauthTokenSchema)` to create a new message.
 */
export const BigQueryOauthTokenSchema: GenMessage<BigQueryOauthToken> = /*@__PURE__*/
  messageDesc(file_quary_service_v1_connection_response, 15);

/**
 * @generated from message quary.service.v1.BigQueryOauthTokenRefresh
 */
export type BigQueryOauthTokenRefresh = Message<"quary.service.v1.BigQueryOauthTokenRefresh"> & {
  /**
   * short-lived token
   *
   * @generated from field: string access_token = 1;
   */
  accessToken: string;

  /**
   * absolute time the token expires
   *
   * @generated from field: string expiry_time = 2;
   */
  expiryTime: string;
};

/**
 * Describes the message quary.service.v1.BigQueryOauthTokenRefresh.
 * Use `create(BigQueryOauthTokenRefreshSchema)` to create a new message.
 */
export const BigQueryOauthTokenRefreshSchema: GenMessage<BigQueryOauthTokenRefresh> = /*@__PURE__*/
  messageDesc(file_quary_service_v1_connection_response, 16);

/**
 * Snowflake SSO
 *
 * @generated from message quary.service.v1.SnowflakeOauthProxyRequest
 */
export type SnowflakeOauthProxyRequest = Message<"quary.service.v1.SnowflakeOauthProxyRequest"> & {
  /**
   * @generated from field: string account_url = 1;
   */
  accountUrl: string;

  /**
   * @generated from field: string client_id = 2;
   */
  clientId: string;

  /**
   * @generated from field: string client_secret = 3;
   */
  clientSecret: string;

  /**
   * @generated from field: string role = 4;
   */
  role: string;
};

/**
 * Describes the message quary.service.v1.SnowflakeOauthProxyRequest.
 * Use `create(SnowflakeOauthProxyRequestSchema)` to create a new message.
 */
export const SnowflakeOauthProxyRequestSchema: GenMessage<SnowflakeOauthProxyRequest> = /*@__PURE__*/
  messageDesc(file_quary_service_v1_connection_response, 17);

/**
 * @generated from message quary.service.v1.SnowflakeOauthToken
 */
export type SnowflakeOauthToken = Message<"quary.service.v1.SnowflakeOauthToken"> & {
  /**
   * @generated from field: string access_token = 1;
   */
  accessToken: string;

  /**
   * @generated from field: string refresh_token = 2;
   */
  refreshToken: string;

  /**
   * @generated from field: string expiry_time = 3;
   */
  expiryTime: string;
};

/**
 * Describes the message quary.service.v1.SnowflakeOauthToken.
 * Use `create(SnowflakeOauthTokenSchema)` to create a new message.
 */
export const SnowflakeOauthTokenSchema: GenMessage<SnowflakeOauthToken> = /*@__PURE__*/
  messageDesc(file_quary_service_v1_connection_response, 18);

/**
 * @generated from message quary.service.v1.SnowflakeOauthRefreshToken
 */
export type SnowflakeOauthRefreshToken = Message<"quary.service.v1.SnowflakeOauthRefreshToken"> & {
  /**
   * @generated from field: string access_token = 1;
   */
  accessToken: string;

  /**
   * @generated from field: string expiry_time = 3;
   */
  expiryTime: string;
};

/**
 * Describes the message quary.service.v1.SnowflakeOauthRefreshToken.
 * Use `create(SnowflakeOauthRefreshTokenSchema)` to create a new message.
 */
export const SnowflakeOauthRefreshTokenSchema: GenMessage<SnowflakeOauthRefreshToken> = /*@__PURE__*/
  messageDesc(file_quary_service_v1_connection_response, 19);

