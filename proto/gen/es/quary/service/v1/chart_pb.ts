// @generated by protoc-gen-es v2.0.0 with parameter "target=ts"
// @generated from file quary/service/v1/chart.proto (package quary.service.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_protobuf_struct } from "@bufbuild/protobuf/wkt";
import type { JsonObject, Message } from "@bufbuild/protobuf";

/**
 * Describes the file quary/service/v1/chart.proto.
 */
export const file_quary_service_v1_chart: GenFile = /*@__PURE__*/
  fileDesc("ChxxdWFyeS9zZXJ2aWNlL3YxL2NoYXJ0LnByb3RvEhBxdWFyeS5zZXJ2aWNlLnYxIrQCCgVDaGFydBIMCgRuYW1lGAEgASgJEhgKC2Rlc2NyaXB0aW9uGAIgASgJSAGIAQESDAoEdGFncxgDIAMoCRIRCglmaWxlX3BhdGgYCSABKAkSEQoHcmF3X3NxbBgEIAEoCUgAEhsKEXByZV90ZW1wbGF0ZWRfc3FsGAUgASgJSAASOwoJcmVmZXJlbmNlGAYgASgLMiYucXVhcnkuc2VydmljZS52MS5DaGFydC5Bc3NldFJlZmVyZW5jZUgAEicKBmNvbmZpZxgHIAEoCzIXLmdvb2dsZS5wcm90b2J1Zi5TdHJ1Y3QSEgoKcmVmZXJlbmNlcxgIIAMoCRoeCg5Bc3NldFJlZmVyZW5jZRIMCgRuYW1lGAEgASgJQggKBnNvdXJjZUIOCgxfZGVzY3JpcHRpb25CAlABYgZwcm90bzM", [file_google_protobuf_struct]);

/**
 * Parsed chart that is in a project
 *
 * @generated from message quary.service.v1.Chart
 */
export type Chart = Message<"quary.service.v1.Chart"> & {
  /**
   * Name of the chart
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Description of the cart
   *
   * @generated from field: optional string description = 2;
   */
  description?: string;

  /**
   * Tags are used to group different parts of the project together. For example, you could tag all models that are
   * related to a specific department with the same tag.
   *
   * @generated from field: repeated string tags = 3;
   */
  tags: string[];

  /**
   * Path of the file
   *
   * @generated from field: string file_path = 9;
   */
  filePath: string;

  /**
   * Where the data comes from
   *
   * @generated from oneof quary.service.v1.Chart.source
   */
  source: {
    /**
     * raw sql that is passed to the database
     *
     * @generated from field: string raw_sql = 4;
     */
    value: string;
    case: "rawSql";
  } | {
    /**
     * sql that is passed to the database with templating through quary
     *
     * @generated from field: string pre_templated_sql = 5;
     */
    value: string;
    case: "preTemplatedSql";
  } | {
    /**
     * reference to a pre-existing asset, model, source, seed, snapshot
     *
     * @generated from field: quary.service.v1.Chart.AssetReference reference = 6;
     */
    value: Chart_AssetReference;
    case: "reference";
  } | { case: undefined; value?: undefined };

  /**
   * Configuration for the chart that is passed to perspective
   *
   * @generated from field: google.protobuf.Struct config = 7;
   */
  config?: JsonObject;

  /**
   * References that this chart has, these can be models/sources/seeds/snapshots
   *
   * @generated from field: repeated string references = 8;
   */
  references: string[];
};

/**
 * Describes the message quary.service.v1.Chart.
 * Use `create(ChartSchema)` to create a new message.
 */
export const ChartSchema: GenMessage<Chart> = /*@__PURE__*/
  messageDesc(file_quary_service_v1_chart, 0);

/**
 * @generated from message quary.service.v1.Chart.AssetReference
 */
export type Chart_AssetReference = Message<"quary.service.v1.Chart.AssetReference"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message quary.service.v1.Chart.AssetReference.
 * Use `create(Chart_AssetReferenceSchema)` to create a new message.
 */
export const Chart_AssetReferenceSchema: GenMessage<Chart_AssetReference> = /*@__PURE__*/
  messageDesc(file_quary_service_v1_chart, 0, 0);

